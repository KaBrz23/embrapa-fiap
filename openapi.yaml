openapi: 3.0.3
info:
  title: API EMBRAPA - Autenticação
  description: Endpoints para gerenciamento de autenticação e usuários
  version: 1.0.0

servers:
  - url: http://localhost:8000/api/v1
    description: Servidor local


security:
  - BearerAuth: []  # Isso força o Swagger UI a mostrar o botão Authorize

paths:
  # CREATE TOKEN
  /auth/createToken:
    post:
      tags: ["Autenticação"]
      summary: Gera tokens de acesso e refresh
      description: Autentica usuário e retorna tokens JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "usuario_exemplo"
                password:
                  type: string
                  example: "senha_secreta"
              required: ["username", "password"]
      responses:
        200:
          description: Tokens gerados com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        401:
          description: Credenciais inválidas

  # REFRESH TOKEN
  /auth/refreshToken:
    post:
      tags: ["Autenticação"]
      summary: Renova access token
      description: Usa refresh token para gerar novo access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              required: ["refresh_token"]
      responses:
        200:
          description: Novo access token gerado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        401:
          description: Refresh token inválido ou expirado

  # CREATE USER
  /auth/createUser:
    post:
      tags: ["Usuários"]
      summary: Cria novo usuário
      description: Registra um novo usuário no sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        201:
          description: Usuário criado com sucesso
        400:
          description: Usuário já existe
        500:
          description: Erro interno no servidor
  
  # DELETE TOKEN
  /auth/user/{user_id}:
    delete:
      tags: ["Usuários"]
      summary: Remove usuário
      description: Deleta um usuário existente (requer autenticação)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Usuário removido com sucesso
        401:
          description: Não autorizado
        404:
          description: Usuário não encontrado

  # GET PRODUCAO POR YEAR
  /producao/{year}:
    get:
      tags:
        - "Produção"
      summary: "Obtém dados de produção por ano específico"
      description: "Retorna uma lista de registros de produção agrícola filtrados pelo ano solicitado"
      parameters:
        - name: year
          in: path
          description: "Ano para filtrar os dados (ex: 2000)"
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1970
            maximum: 2023
            example: 2000
      responses:
        '200':
          description: "Dados de produção encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ano:
                      type: integer
                      description: "Ano do registro"
                      example: 2000
                    produto:
                      type: string
                      description: "Nome do produto agrícola"
                      example: "VINHO DE MESA"
                    valor:
                      type: number
                      format: float
                      description: "Quantidade produzida no ano"
                      example: 273025576.0
        '400':
          description: "Ano inválido ou não encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano 3000 não encontrado. Anos disponíveis: 1970-2023"
        '401':
          description: "Não autorizado"
        '500':
          description: "Erro interno no servidor"
      security:
        - BearerAuth: []

  # GET PRODUCAO POR RANGE DE ANOS
  /producao:
    get:
      tags:
        - "Produção"
      summary: "Obtém dados de produção por intervalo de anos"
      description: "Retorna uma lista de registros de produção agrícola filtrados pelo intervalo de anos solicitado (inclusive)"
      parameters:
        - name: ano_inicio
          in: query
          description: "Ano inicial do intervalo (1970-2023)"
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1970
            maximum: 2023
            example: 2000
        - name: ano_fim
          in: query
          description: "Ano final do intervalo (1970-2023)"
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1970
            maximum: 2023
            example: 2005
      responses:
        '200':
          description: "Dados de produção encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ano:
                      type: integer
                      description: "Ano do registro"
                      example: 2000
                    produto:
                      type: string
                      description: "Nome do produto agrícola"
                      example: "VINHO DE MESA"
                    valor:
                      type: number
                      format: float
                      description: "Quantidade produzida no ano"
                      example: 273025576.0
        '400':
          description: "Intervalo inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano inicial deve ser menor ou igual ao ano final"
        '401':
          description: "Não autorizado"
        '500':
          description: "Erro interno no servidor"
      security:
        - BearerAuth: []


  # PROCESSAMENTO VINIFERAS BY YEAR
  /processamento/viniferas/{year}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas viníferas por ano"
      description: "Retorna dados de processamento de uvas viníferas para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Ano inválido"
        500:
          description: "Erro no servidor"

  # VINIFERAS RANGE
  /processamento/viniferas/{year_start}/{year_end}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas viníferas por intervalo"
      description: "Retorna dados de processamento de uvas viníferas para um intervalo de anos"
      parameters:
        - name: year_start
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2010
        - name: year_end
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Intervalo inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano inicial deve ser menor ou igual ao ano final"
        500:
          description: "Erro no servidor"

  # PROCESSAMENTO AMERICANAS BY YEAR
  /processamento/americanas/{year}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas americanas por ano"
      description: "Retorna dados de processamento de uvas americanas para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Ano inválido"
        500:
          description: "Erro no servidor"

  # AMERICANAS RANGE
  /processamento/americanas/{year_start}/{year_end}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas americanas por intervalo"
      description: "Retorna dados de processamento de uvas americanas para um intervalo de anos"
      parameters:
        - name: year_start
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2010
        - name: year_end
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Intervalo inválido"
        500:
          description: "Erro no servidor"

  # PROCESSAMENTO UVAS BY YEAR
  /processamento/uvas/{year}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas de mesa por ano"
      description: "Retorna dados de processamento de uvas de mesa para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Ano inválido"
        500:
          description: "Erro no servidor"

  # UVAS RANGE
  /processamento/uvas/{year_start}/{year_end}:
    get:
      tags: ["Processamento"]
      summary: "Dados de processamento de uvas de mesa por intervalo"
      description: "Retorna dados de processamento de uvas de mesa para um intervalo de anos"
      parameters:
        - name: year_start
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2010
        - name: year_end
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessamentoItem"
        400:
          description: "Intervalo inválido"
        500:
          description: "Erro no servidor"

  # Sem classificação por ano
  /processamento/semClass/{year}:
  get:
    tags: ["Processamento"]
    summary: "Dados sem classificação por ano específico"
    description: "Retorna dados sem classificação específica para um ano determinado"
    parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          minimum: 1970
          maximum: 2023
          example: 2020
    security:
      - BearerAuth: []
    responses:
      200:
        description: "Dados encontrados"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SemClassItem"
      400:
        description: "Ano inválido"
        content:
          application/json:
            schema:
              type: object
              properties:
                detail:
                  type: string
                  example: "Ano 3000 não encontrado. Anos disponíveis: 1970-2023"
      401:
        description: "Não autorizado"
      500:
        description: "Erro interno no servidor"

  # Sem classificação range
  /processamento/semClass/{year_start}/{year_end}:
    get:
      tags: ["Processamento"]
      summary: "Dados sem classificação por intervalo de anos"
      description: "Retorna dados sem classificação específica para um intervalo de anos (inclusive)"
      parameters:
        - name: year_start
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2010
        - name: year_end
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SemClassItem"
        400:
          description: "Intervalo inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano inicial deve ser menor ou igual ao ano final"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  
  # GET COMERCIALIZAÇÃO POR ANO
  /comercializacao/{year}:
    get:
      tags: ["Comercialização"]
      summary: "Dados de comercialização por ano específico"
      description: "Retorna dados de comercialização para um ano determinado"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ComercializacaoItem"
        400:
          description: "Ano inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano 3000 não encontrado. Anos disponíveis: 1970-2023"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"

  # GET COMERCIALIZAÇÃO POR INTERVALO DE ANOS
  /comercializacao/{year_start}/{year_end}:
    get:
      tags: ["Comercialização"]
      summary: "Dados de comercialização por intervalo de anos"
      description: "Retorna dados de comercialização para um intervalo de anos (inclusive)"
      parameters:
        - name: year_start
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2010
        - name: year_end
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2023
            example: 2020
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ComercializacaoItem"
        400:
          description: "Intervalo inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Ano inicial deve ser menor ou igual ao ano final"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /importacao/vinhosMesa/{year}:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de vinhos de mesa por ano"
      description: "Retorna dados de importação de vinhos de mesa para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/vinhosMesa:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de vinhos de mesa por intervalo"
      description: "Retorna dados de importação de vinhos de mesa para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/espumantes/{year}:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de espumantes por ano"
      description: "Retorna dados de importação de espumantes para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/espumantes:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de espumantes por intervalo"
      description: "Retorna dados de importação de espumantes para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/uvasFrescas/{year}:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de uvas frescas por ano"
      description: "Retorna dados de importação de uvas frescas para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/uvasFrescas:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de uvas frescas por intervalo"
      description: "Retorna dados de importação de uvas frescas para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/uvasPassas/{year}:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de uvas passas por ano"
      description: "Retorna dados de importação de uvas passas para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/uvasPassas:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de uvas passas por intervalo"
      description: "Retorna dados de importação de uvas passas para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/sucoUva/{year}:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de suco de uva por ano"
      description: "Retorna dados de importação de suco de uva para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /importacao/sucoUva:
    get:
      tags: ["Importacao"]
      summary: "Dados de importação de suco de uva por intervalo"
      description: "Retorna dados de importação de suco de uva para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/vinhosMesa/{year}:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de vinhos de mesa por ano"
      description: "Retorna dados de exportação de vinhos de mesa para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/vinhosMesa:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de vinhos de mesa por intervalo"
      description: "Retorna dados de exportação de vinhos de mesa para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/espumantes/{year}:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de espumantes por ano"
      description: "Retorna dados de exportação de espumantes para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/espumantes:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de espumantes por intervalo"
      description: "Retorna dados de exportação de espumantes para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/uvasFrescas/{year}:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de uvas frescas por ano"
      description: "Retorna dados de exportação de uvas frescas para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/uvasFrescas:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de uvas frescas por intervalo"
      description: "Retorna dados de exportação de uvas frescas para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/sucoUva/{year}:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de suco de uva por ano"
      description: "Retorna dados de exportação de suco de uva para um ano específico"
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

  /exportacao/sucoUva:
    get:
      tags: ["Exportacao"]
      summary: "Dados de exportação de suco de uva por intervalo"
      description: "Retorna dados de exportação de suco de uva para um intervalo de anos"
      parameters:
        - name: ano_inicio
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2010
        - name: ano_fim
          in: query
          required: true
          schema:
            type: integer
            minimum: 1970
            maximum: 2025
            example: 2020
      responses:
        200:
          description: "Dados encontrados"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: integer
                      - type: number
        400:
          description: "Intervalo inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro no servidor"
      security:
        - BearerAuth: []

components:
  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          example: "bearer"
      required: ["access_token", "token_type"]

    UserCreate:
      type: object
      properties:
        username:
          type: string
          example: "novo_usuario"
        password:
          type: string
          example: "senha_forte123"
      required: ["username", "password"]

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT